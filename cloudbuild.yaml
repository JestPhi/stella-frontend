# Google Cloud Build configuration for stella-web Next.js application
# Enhanced with testing, caching, and better deployment practices

steps:
  # Step 1: Install dependencies and cache them
  - name: "node:20-alpine"
    id: "install-dependencies"
    entrypoint: "npm"
    args: ["ci"]
    env:
      - "NODE_ENV=production"

  # Step 2: Run type checking
  - name: "node:20-alpine"
    id: "type-check"
    entrypoint: "npm"
    args: ["run", "type-check"]
    waitFor: ["install-dependencies"]

  # Step 3: Run linting
  - name: "node:20-alpine"
    id: "lint"
    entrypoint: "npm"
    args: ["run", "lint"]
    waitFor: ["install-dependencies"]

  # Step 4: Build the Next.js application
  - name: "node:20-alpine"
    id: "build-app"
    entrypoint: "npm"
    args: ["run", "build"]
    waitFor: ["type-check", "lint"]
    env:
      # Build-time environment variables (these get baked into the build)
      - "NODE_ENV=production"
      - "NEXT_PUBLIC_FIREBASE_API_KEY=$_FIREBASE_API_KEY"
      - "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=$_FIREBASE_AUTH_DOMAIN"
      - "NEXT_PUBLIC_FIREBASE_PROJECT_ID=$_FIREBASE_PROJECT_ID_PUBLIC"
      - "NEXT_PUBLIC_STORJ_PUBLIC_URL=$_STORJ_PUBLIC_URL"
      - "NEXT_PUBLIC_STELLA_REACT_NATIVE_FOR_WEB_HOST=$_REACT_NATIVE_HOST"

  # Step 5: Build Docker image with caching
  - name: "gcr.io/cloud-builders/docker"
    id: "build-image"
    args:
      - "build"
      - "-t"
      - "gcr.io/$PROJECT_ID/stella-web:$COMMIT_SHA"
      - "-t"
      - "gcr.io/$PROJECT_ID/stella-web:latest"
      - "--cache-from"
      - "gcr.io/$PROJECT_ID/stella-web:latest"
      - "--build-arg"
      - "BUILDKIT_INLINE_CACHE=1"
      - "."
    waitFor: ["build-app"]

  # Step 6: Push Docker images
  - name: "gcr.io/cloud-builders/docker"
    id: "push-sha"
    args: ["push", "gcr.io/$PROJECT_ID/stella-web:$COMMIT_SHA"]
    waitFor: ["build-image"]

  - name: "gcr.io/cloud-builders/docker"
    id: "push-latest"
    args: ["push", "gcr.io/$PROJECT_ID/stella-web:latest"]
    waitFor: ["build-image"]

  # Step 7: Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "deploy-cloudrun"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "stella-web"
      - "--image"
      - "gcr.io/$PROJECT_ID/stella-web:$COMMIT_SHA"
      - "--region"
      - "us-central1"
      - "--platform"
      - "managed"
      - "--allow-unauthenticated"
      - "--port"
      - "3000"
      - "--memory"
      - "1Gi"
      - "--cpu"
      - "1"
      - "--min-instances"
      - "0"
      - "--max-instances"
      - "10"
      - "--concurrency"
      - "80"
      - "--timeout"
      - "300"
      # Runtime environment variables (server-side only)
      - "--set-env-vars"
      - "NODE_ENV=production,STELLA_APP_HOST=$_STELLA_APP_HOST"
      # Use Cloud Secret Manager for sensitive data
      - "--set-secrets"
      - "FIREBASE_PROJECT_ID=stella-firebase-project-id:latest"
      - "--set-secrets"
      - "FIREBASE_CLIENT_EMAIL=stella-firebase-client-email:latest"
      - "--set-secrets"
      - "FIREBASE_PRIVATE_KEY=stella-firebase-private-key:latest"
      # Labels for better organization
      - "--labels"
      - "app=stella-web,env=production,team=engineering"
    waitFor: ["push-sha"]

# Substitution variables (override these in your build trigger)
substitutions:
  # üîí Server-side only variables (NEVER expose these publicly)
  _STELLA_APP_HOST: "https://your-backend-api.com"

  # üåê Client-side safe variables (these are meant to be public and get built into the app)
  _STORJ_PUBLIC_URL: "https://link.storjshare.io/your-bucket"
  _FIREBASE_API_KEY: "AIzaSyXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
  _FIREBASE_AUTH_DOMAIN: "your-project.firebaseapp.com"
  _FIREBASE_PROJECT_ID_PUBLIC: "your-firebase-project-id"
  _REACT_NATIVE_HOST: "https://your-app-domain.com"

# Images to be pushed to registry
images:
  - "gcr.io/$PROJECT_ID/stella-web:$COMMIT_SHA"
  - "gcr.io/$PROJECT_ID/stella-web:latest"

# Build options
options:
  # Use high-performance machine for faster builds
  machineType: "E2_HIGHCPU_8"

  # Enable detailed logging
  logging: CLOUD_LOGGING_ONLY

  # Set build timeout
  timeout: "1200s"

  # Enable substitution validation
  substitution_option: "ALLOW_LOOSE"

# Build timeout (20 minutes)
timeout: "1200s"

# Tags for organizing builds
tags:
  - "stella-web"
  - "nextjs"
  - "production"
